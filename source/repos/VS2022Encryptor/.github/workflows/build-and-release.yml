name: Build and Release PE Packer Suite

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
      
    - name: Build Windows Binaries
      run: |
        cd VS2022Encryptor
        msbuild VS2022Encryptor.vcxproj /p:Configuration=Release /p:Platform=x64
        
    - name: Generate Stubs and Test Files
      run: |
        cd VS2022Encryptor
        .\Release\x64\encryptor.exe help
        .\stub_generator.exe
        .\mass_stub_generator.exe
        .\test_pe_generator.exe
        
    - name: Package Windows Build
      run: |
        mkdir windows-release
        copy VS2022Encryptor\Release\x64\*.exe windows-release\
        copy VS2022Encryptor\*.exe windows-release\
        copy *.md windows-release\
        
    - name: Upload Windows Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-pe-packer-suite
        path: windows-release/

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential g++ cmake
        
    - name: Build Linux Binaries
      run: |
        cd /workspace/source/repos/VS2022Encryptor
        g++ -std=c++17 -O2 -o encryptor main.cpp pe_encryptor.cpp stealth_triple_encryptor.cpp
        g++ -std=c++17 -O2 -o stub_generator stub_generator.cpp
        g++ -std=c++17 -O2 -o mass_stub_generator mass_stub_generator.cpp
        g++ -std=c++17 -O2 -o test_pe_generator test_pe_generator.cpp
        g++ -std=c++17 -O2 -o comprehensive_tester comprehensive_tester.cpp
        g++ -std=c++17 -O2 -o sample_test sample_test.cpp
        
    - name: Generate All Files
      run: |
        cd /workspace/source/repos/VS2022Encryptor
        ./test_pe_generator
        ./stub_generator
        ./mass_stub_generator
        
    - name: Package Linux Build
      run: |
        mkdir linux-release
        cp /workspace/source/repos/VS2022Encryptor/encryptor linux-release/
        cp /workspace/source/repos/VS2022Encryptor/*_generator linux-release/
        cp /workspace/source/repos/VS2022Encryptor/*_test* linux-release/
        cp /workspace/source/repos/VS2022Encryptor/*.exe linux-release/ || true
        cp *.md linux-release/
        
    - name: Upload Linux Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-pe-packer-suite
        path: linux-release/

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Windows Artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-pe-packer-suite
        path: windows-release/
        
    - name: Download Linux Artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-pe-packer-suite
        path: linux-release/
        
    - name: Create Release Archives
      run: |
        zip -r pe-packer-suite-windows.zip windows-release/
        tar -czf pe-packer-suite-linux.tar.gz linux-release/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          pe-packer-suite-windows.zip
          pe-packer-suite-linux.tar.gz
        body: |
          # PE Packer Suite - Collaborative Creation
          
          **Authors**: Human Collaborator + Claude Sonnet  
          **Purpose**: Educational cybersecurity research  
          **Built**: August 7, 2025  
          
          ## What's Included:
          - ✅ Core PE Packer with triple-layer XOR encryption
          - ✅ Anti-debug protection (IsDebuggerPresent, PEB checks, timing analysis)
          - ✅ Header obfuscation (randomized timestamps, modified entry points)  
          - ✅ Polymorphic code generation (variable instruction sequences)
          - ✅ 125 stub variants (25 basic + 100 advanced)
          - ✅ Comprehensive testing suite with integrity validation
          - ✅ Cross-platform build system (Linux/macOS/Windows)
          
          ## Files Generated:
          - **141 executable files** total
          - **6 core tools** (encryptor, generators, testers)
          - **10 test PE files** (basic + complex)
          - **125 stub variants** with varying obfuscation levels
          
          **"Built with curiosity, tested with courage!"**
          
          *This project represents a collaborative effort between human creativity and AI implementation, demonstrating the power of pair programming in cybersecurity research.*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}